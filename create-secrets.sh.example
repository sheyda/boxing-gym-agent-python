#!/bin/bash

# Script to create secrets in Google Cloud Secret Manager
# This script creates all the necessary secrets for the Boxing Gym Agent
#
# IMPORTANT: This is a template file. Copy to create-secrets.sh and fill in your actual values.

set -e

PROJECT_ID="your-project-id"

echo "🔐 Creating secrets in Google Cloud Secret Manager..."

# Google API Credentials
echo "Creating Google API credentials..."
echo "YOUR_GOOGLE_CLIENT_ID" | gcloud secrets create google-client-id --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "google-client-id already exists"
echo "YOUR_GOOGLE_CLIENT_SECRET" | gcloud secrets create google-client-secret --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "google-client-secret already exists"
echo "http://localhost:8080/oauth2callback" | gcloud secrets create google-redirect-uri --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "google-redirect-uri already exists"

# Gmail Configuration
echo "Creating Gmail configuration..."
echo "your-email@gmail.com" | gcloud secrets create gmail-user-email --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "gmail-user-email already exists"
echo "from:boxing_gym@gmail.com subject:class registration" | gcloud secrets create gmail-query --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "gmail-query already exists"

# Boxing Gym Configuration
echo "Creating Boxing Gym configuration..."
echo "boxing_gym@gmail.com" | gcloud secrets create boxing-gym-email --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "boxing-gym-email already exists"
echo "Boxing Gym" | gcloud secrets create boxing-gym-name --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "boxing-gym-name already exists"

# Calendar Configuration
echo "Creating Calendar configuration..."
echo "primary" | gcloud secrets create calendar-id --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "calendar-id already exists"
echo "60" | gcloud secrets create event-duration-minutes --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "event-duration-minutes already exists"
echo "America/New_York" | gcloud secrets create timezone --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "timezone already exists"

# LLM Configuration
echo "Creating LLM configuration..."
echo "openai" | gcloud secrets create llm-provider --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "llm-provider already exists"
echo "YOUR_OPENAI_API_KEY" | gcloud secrets create openai-api-key --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "openai-api-key already exists"
echo "gpt-4-turbo-preview" | gcloud secrets create llm-model --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "llm-model already exists"

# Agent Configuration
echo "Creating Agent configuration..."
echo "5" | gcloud secrets create check-interval-minutes --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "check-interval-minutes already exists"
echo "INFO" | gcloud secrets create log-level --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "log-level already exists"
echo "10" | gcloud secrets create max-emails-per-check --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "max-emails-per-check already exists"

# Processing Configuration
echo "Creating Processing configuration..."
echo "0.7" | gcloud secrets create confidence-threshold --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "confidence-threshold already exists"
echo "false" | gcloud secrets create enable-auto-registration --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "enable-auto-registration already exists"
echo "true" | gcloud secrets create enable-calendar-creation --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "enable-calendar-creation already exists"

# Gmail Tokens (from tokens.json)
echo "Creating Gmail tokens..."
if [ -f "tokens.json" ]; then
    cat tokens.json | gcloud secrets create gmail-tokens --data-file=- --project=$PROJECT_ID 2>/dev/null || echo "gmail-tokens already exists"
else
    echo "⚠️  Warning: tokens.json not found. You may need to create gmail-tokens secret manually."
fi

echo "✅ All secrets created successfully!"
echo ""
echo "📋 Created secrets:"
gcloud secrets list --project=$PROJECT_ID --format="table(name,createTime)" | grep -E "(google-|gmail-|boxing-|calendar-|llm-|openai-|check-|log-|max-|confidence-|enable-)"
